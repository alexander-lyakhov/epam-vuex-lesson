
Сейчас я предлагаю рассмотреть, как теория работает в реальных условиях.
Специально для этого урока я приготовил небольшой пример, который поможет нам проследить все оснавные принципы работы со стором.
Мы рассмотрим такие вопросы, как доступ к данным в стейте, работа с геттерами, мутации и экшины. А также рассмотрим разделение стора на отдельные модули.
Применение модулей является очень удобной практикой в больших приложениях.

Для начала я покажу приложение в работе, а затем последовательно, шаг за шагом мы реализуем лигику этого приложения при помощи Vuex.

***
Переключаемся на приложение
***

Вначале пара слов о приложении.
Основное назначение этого примера - управление списком пользователей. Данные о пользователях как раз хранятся в сторе.

Что у нас тут есть? В двух словах расскажу об элементах управления и опишу с какими функциями Vuex'а эти элементы связаны.

- Немного информации об аккаунте. Эта информация тоже хранится в сторе и мы будем читать ее напрямую из стейта.

- Счетчик пользователей. Его мы реализуем при помощи геттеров внутри стора. Напомню, что компоненты Vue тоже могут использовать внутри себя геттеры
  и в этом примере мы также будем ими польваться.

- Поле для ввода имени нового пользователя. С его помощью будем добавлять новые данные в стор.

- После добавления, мы имеем возможность удалить записи из стора. Обе эти операции (добавление и удаление) изменяют данные в стейте, и для этой цели служат мутации.

- А таже у нас есть возможность подгружать данные с удаленного сервера.
  Это асинхронная операция и специально для таких таких операций (для работы с асинхронными действиями) предназначены экшены.
  Напомню, что в отличии от экшинов МУТАЦИИ являются операциями синхронными.


Ссылку на этот пример я оставлю в конце лекции.



*  *  *

Теперь после того, как мы определились, какое поведение мы ожидаем от нашего приложения, я предлагаю перейти к его реализации.
У меня есть копия этого приложения без стора. Соответственно у нас нет ни каких данных и логики по работе с этими данными.
Мы можем видеть вместо имени в аккаунте строку Name, которая вписана туда хардкодом. Вместо аватарки мы вообще ни чего не видим.
Значение счетка тоже установлено в 0. Сейчас мы будем это исправлять.

Прежде всего давайте создадим и зарегистрируем наше хранилище. Для этого в папке src создадим новую папку store и в ней файл с однойменным нащванием.
Теперь осталось создать сам стор )



Давайте немного поговорим о композиции нашего приложения.




* Начинаем с файла store.js и с пустого стейта

*
*
*